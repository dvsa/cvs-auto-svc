/*
 * Vehicle Enquiry Service Swagger
 * This is the CVS API for showing details of heavy goods vehicles and their associated test result.
 *
 * OpenAPI spec version: 1.1-oas3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package vott.models.dto.enquiry;

import com.google.gson.annotations.SerializedName;


import java.util.Objects;

/**
 * TestType
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-04-13T17:16:44.237Z[GMT]")
public class TestType {
  @SerializedName("testTypeClassification")
  private String testTypeClassification = null;

  @SerializedName("testTypeName")
  private String testTypeName = null;

  public TestType testTypeClassification(String testTypeClassification) {
    this.testTypeClassification = testTypeClassification;
    return this;
  }

   /**
   * Get testTypeClassification
   * @return testTypeClassification
  **/
  public String getTestTypeClassification() {
    return testTypeClassification;
  }

  public void setTestTypeClassification(String testTypeClassification) {
    this.testTypeClassification = testTypeClassification;
  }

  public TestType testTypeName(String testTypeName) {
    this.testTypeName = testTypeName;
    return this;
  }

   /**
   * Get testTypeName
   * @return testTypeName
  **/
  public String getTestTypeName() {
    return testTypeName;
  }

  public void setTestTypeName(String testTypeName) {
    this.testTypeName = testTypeName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestType testType = (TestType) o;
    return Objects.equals(this.testTypeClassification, testType.testTypeClassification) &&
        Objects.equals(this.testTypeName, testType.testTypeName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(testTypeClassification, testTypeName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestType {\n");
    
    sb.append("    testTypeClassification: ").append(toIndentedString(testTypeClassification)).append("\n");
    sb.append("    testTypeName: ").append(toIndentedString(testTypeName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

/*
 * Vehicle Enquiry Service Swagger
 * This is the CVS API for showing details of heavy goods vehicles and their associated test result.
 *
 * OpenAPI spec version: 1.1-oas3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package vott.models.dto.enquiry;

import com.google.gson.annotations.SerializedName;


import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * TestResult
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-04-13T17:16:44.237Z[GMT]")
public class TestResult {
  @SerializedName("fuelEmission")
  private FuelEmission fuelEmission = null;

  @SerializedName("testStation")
  private TestStation testStation = null;

  @SerializedName("tester")
  private Tester tester = null;

  @SerializedName("vehicleClass")
  private VehicleClass vehicleClass = null;

  @SerializedName("testType")
  private TestType testType = null;

  @SerializedName("customDefect")
  private CustomDefect customDefect = null;

  @SerializedName("testStatus")
  private String testStatus = null;

  @SerializedName("reasonForCancellation")
  private String reasonForCancellation = null;

  @SerializedName("numberOfSeats")
  private Integer numberOfSeats = null;

  @SerializedName("odometerReading")
  private Integer odometerReading = null;

  @SerializedName("odometerReadingUnits")
  private String odometerReadingUnits = null;

  @SerializedName("countryOfRegistration")
  private String countryOfRegistration = null;

  @SerializedName("noOfAxles")
  private Integer noOfAxles = null;

  @SerializedName("regndate")
  private String regndate = null;

  @SerializedName("firstUsedate")
  private String firstUsedate = null;

  @SerializedName("createdAt")
  private String createdAt = null;

  @SerializedName("lastUpdatedAt")
  private String lastUpdatedAt = null;

  @SerializedName("testCode")
  private String testCode = null;

  @SerializedName("testNumber")
  private String testNumber = null;

  @SerializedName("certificateNumber")
  private String certificateNumber = null;

  @SerializedName("secondaryCertificateNumber")
  private String secondaryCertificateNumber = null;

  @SerializedName("testExpiryDate")
  private String testExpiryDate = null;

  @SerializedName("testAnniversaryDate")
  private String testAnniversaryDate = null;

  @SerializedName("testDateStartTimestamp")
  private String testDateStartTimestamp = null;

  @SerializedName("testDateEndTimestamp")
  private String testDateEndTimestamp = null;

  @SerializedName("numberOfSeatbeltsFitted")
  private Integer numberOfSeatbeltsFitted = null;

  @SerializedName("lastSeatbeltInstallationCheckDate")
  private String lastSeatbeltInstallationCheckDate = null;

  @SerializedName("seatbeltInstallationCheckDate")
  private String seatbeltInstallationCheckDate = null;

  @SerializedName("testResult")
  private String testResult = null;

  @SerializedName("reasonForAbandoning")
  private String reasonForAbandoning = null;

  @SerializedName("additionalNotesRecorded")
  private String additionalNotesRecorded = null;

  @SerializedName("additionalCommentsForAbandon")
  private String additionalCommentsForAbandon = null;

  @SerializedName("particulateTrapFitted")
  private String particulateTrapFitted = null;

  @SerializedName("particulateTrapSerialNumber")
  private String particulateTrapSerialNumber = null;

  @SerializedName("modificationDateUsed")
  private String modificationDateUsed = null;

  @SerializedName("smokeTestKLimitApplied")
  private String smokeTestKLimitApplied = null;

  @SerializedName("createdById")
  private String createdById = null;

  @SerializedName("createdByName")
  private String createdByName = null;

  @SerializedName("lastUpdatedById")
  private String lastUpdatedById = null;

  @SerializedName("lastUpdatedByName")
  private String lastUpdatedByName = null;

  @SerializedName("defects")
  private List<TestDefect> defects = null;

  public TestResult fuelEmission(FuelEmission fuelEmission) {
    this.fuelEmission = fuelEmission;
    return this;
  }

   /**
   * Get fuelEmission
   * @return fuelEmission
  **/
  public FuelEmission getFuelEmission() {
    return fuelEmission;
  }

  public void setFuelEmission(FuelEmission fuelEmission) {
    this.fuelEmission = fuelEmission;
  }

  public TestResult testStation(TestStation testStation) {
    this.testStation = testStation;
    return this;
  }

   /**
   * Get testStation
   * @return testStation
  **/
  public TestStation getTestStation() {
    return testStation;
  }

  public void setTestStation(TestStation testStation) {
    this.testStation = testStation;
  }

  public TestResult tester(Tester tester) {
    this.tester = tester;
    return this;
  }

   /**
   * Get tester
   * @return tester
  **/
  public Tester getTester() {
    return tester;
  }

  public void setTester(Tester tester) {
    this.tester = tester;
  }

  public TestResult vehicleClass(VehicleClass vehicleClass) {
    this.vehicleClass = vehicleClass;
    return this;
  }

   /**
   * Get vehicleClass
   * @return vehicleClass
  **/
  public VehicleClass getVehicleClass() {
    return vehicleClass;
  }

  public void setVehicleClass(VehicleClass vehicleClass) {
    this.vehicleClass = vehicleClass;
  }

  public TestResult testType(TestType testType) {
    this.testType = testType;
    return this;
  }

   /**
   * Get testType
   * @return testType
  **/
  public TestType getTestType() {
    return testType;
  }

  public void setTestType(TestType testType) {
    this.testType = testType;
  }

  public TestResult customDefect(CustomDefect customDefect) {
    this.customDefect = customDefect;
    return this;
  }

   /**
   * Get customDefect
   * @return customDefect
  **/
  public CustomDefect getCustomDefect() {
    return customDefect;
  }

  public void setCustomDefect(CustomDefect customDefect) {
    this.customDefect = customDefect;
  }

  public TestResult testStatus(String testStatus) {
    this.testStatus = testStatus;
    return this;
  }

   /**
   * Get testStatus
   * @return testStatus
  **/
  public String getTestStatus() {
    return testStatus;
  }

  public void setTestStatus(String testStatus) {
    this.testStatus = testStatus;
  }

  public TestResult reasonForCancellation(String reasonForCancellation) {
    this.reasonForCancellation = reasonForCancellation;
    return this;
  }

   /**
   * Get reasonForCancellation
   * @return reasonForCancellation
  **/
  public String getReasonForCancellation() {
    return reasonForCancellation;
  }

  public void setReasonForCancellation(String reasonForCancellation) {
    this.reasonForCancellation = reasonForCancellation;
  }

  public TestResult numberOfSeats(Integer numberOfSeats) {
    this.numberOfSeats = numberOfSeats;
    return this;
  }

   /**
   * Get numberOfSeats
   * @return numberOfSeats
  **/
  public Integer getNumberOfSeats() {
    return numberOfSeats;
  }

  public void setNumberOfSeats(Integer numberOfSeats) {
    this.numberOfSeats = numberOfSeats;
  }

  public TestResult odometerReading(Integer odometerReading) {
    this.odometerReading = odometerReading;
    return this;
  }

   /**
   * Get odometerReading
   * @return odometerReading
  **/
  public Integer getOdometerReading() {
    return odometerReading;
  }

  public void setOdometerReading(Integer odometerReading) {
    this.odometerReading = odometerReading;
  }

  public TestResult odometerReadingUnits(String odometerReadingUnits) {
    this.odometerReadingUnits = odometerReadingUnits;
    return this;
  }

   /**
   * Get odometerReadingUnits
   * @return odometerReadingUnits
  **/
  public String getOdometerReadingUnits() {
    return odometerReadingUnits;
  }

  public void setOdometerReadingUnits(String odometerReadingUnits) {
    this.odometerReadingUnits = odometerReadingUnits;
  }

  public TestResult countryOfRegistration(String countryOfRegistration) {
    this.countryOfRegistration = countryOfRegistration;
    return this;
  }

   /**
   * Get countryOfRegistration
   * @return countryOfRegistration
  **/
  public String getCountryOfRegistration() {
    return countryOfRegistration;
  }

  public void setCountryOfRegistration(String countryOfRegistration) {
    this.countryOfRegistration = countryOfRegistration;
  }

  public TestResult noOfAxles(Integer noOfAxles) {
    this.noOfAxles = noOfAxles;
    return this;
  }

   /**
   * Get noOfAxles
   * @return noOfAxles
  **/
  public Integer getNoOfAxles() {
    return noOfAxles;
  }

  public void setNoOfAxles(Integer noOfAxles) {
    this.noOfAxles = noOfAxles;
  }

  public TestResult regndate(String regndate) {
    this.regndate = regndate;
    return this;
  }

   /**
   * Get regndate
   * @return regndate
  **/
  public String getRegndate() {
    return regndate;
  }

  public void setRegndate(String regndate) {
    this.regndate = regndate;
  }

  public TestResult firstUsedate(String firstUsedate) {
    this.firstUsedate = firstUsedate;
    return this;
  }

   /**
   * Get firstUsedate
   * @return firstUsedate
  **/
  public String getFirstUsedate() {
    return firstUsedate;
  }

  public void setFirstUsedate(String firstUsedate) {
    this.firstUsedate = firstUsedate;
  }

  public TestResult createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public TestResult lastUpdatedAt(String lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
    return this;
  }

   /**
   * Get lastUpdatedAt
   * @return lastUpdatedAt
  **/
  public String getLastUpdatedAt() {
    return lastUpdatedAt;
  }

  public void setLastUpdatedAt(String lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
  }

  public TestResult testCode(String testCode) {
    this.testCode = testCode;
    return this;
  }

   /**
   * Get testCode
   * @return testCode
  **/
  public String getTestCode() {
    return testCode;
  }

  public void setTestCode(String testCode) {
    this.testCode = testCode;
  }

  public TestResult testNumber(String testNumber) {
    this.testNumber = testNumber;
    return this;
  }

   /**
   * Get testNumber
   * @return testNumber
  **/
  public String getTestNumber() {
    return testNumber;
  }

  public void setTestNumber(String testNumber) {
    this.testNumber = testNumber;
  }

  public TestResult certificateNumber(String certificateNumber) {
    this.certificateNumber = certificateNumber;
    return this;
  }

   /**
   * Get certificateNumber
   * @return certificateNumber
  **/
  public String getCertificateNumber() {
    return certificateNumber;
  }

  public void setCertificateNumber(String certificateNumber) {
    this.certificateNumber = certificateNumber;
  }

  public TestResult secondaryCertificateNumber(String secondaryCertificateNumber) {
    this.secondaryCertificateNumber = secondaryCertificateNumber;
    return this;
  }

   /**
   * Get secondaryCertificateNumber
   * @return secondaryCertificateNumber
  **/
  public String getSecondaryCertificateNumber() {
    return secondaryCertificateNumber;
  }

  public void setSecondaryCertificateNumber(String secondaryCertificateNumber) {
    this.secondaryCertificateNumber = secondaryCertificateNumber;
  }

  public TestResult testExpiryDate(String testExpiryDate) {
    this.testExpiryDate = testExpiryDate;
    return this;
  }

   /**
   * Get testExpiryDate
   * @return testExpiryDate
  **/
  public String getTestExpiryDate() {
    return testExpiryDate;
  }

  public void setTestExpiryDate(String testExpiryDate) {
    this.testExpiryDate = testExpiryDate;
  }

  public TestResult testAnniversaryDate(String testAnniversaryDate) {
    this.testAnniversaryDate = testAnniversaryDate;
    return this;
  }

   /**
   * Get testAnniversaryDate
   * @return testAnniversaryDate
  **/
  public String getTestAnniversaryDate() {
    return testAnniversaryDate;
  }

  public void setTestAnniversaryDate(String testAnniversaryDate) {
    this.testAnniversaryDate = testAnniversaryDate;
  }

  public TestResult testDateStartTimestamp(String testDateStartTimestamp) {
    this.testDateStartTimestamp = testDateStartTimestamp;
    return this;
  }

   /**
   * Get testDateStartTimestamp
   * @return testDateStartTimestamp
  **/
  public String getTestDateStartTimestamp() {
    return testDateStartTimestamp;
  }

  public void setTestDateStartTimestamp(String testDateStartTimestamp) {
    this.testDateStartTimestamp = testDateStartTimestamp;
  }

  public TestResult testDateEndTimestamp(String testDateEndTimestamp) {
    this.testDateEndTimestamp = testDateEndTimestamp;
    return this;
  }

   /**
   * Get testDateEndTimestamp
   * @return testDateEndTimestamp
  **/
  public String getTestDateEndTimestamp() {
    return testDateEndTimestamp;
  }

  public void setTestDateEndTimestamp(String testDateEndTimestamp) {
    this.testDateEndTimestamp = testDateEndTimestamp;
  }

  public TestResult numberOfSeatbeltsFitted(Integer numberOfSeatbeltsFitted) {
    this.numberOfSeatbeltsFitted = numberOfSeatbeltsFitted;
    return this;
  }

   /**
   * Get numberOfSeatbeltsFitted
   * @return numberOfSeatbeltsFitted
  **/
  public Integer getNumberOfSeatbeltsFitted() {
    return numberOfSeatbeltsFitted;
  }

  public void setNumberOfSeatbeltsFitted(Integer numberOfSeatbeltsFitted) {
    this.numberOfSeatbeltsFitted = numberOfSeatbeltsFitted;
  }

  public TestResult lastSeatbeltInstallationCheckDate(String lastSeatbeltInstallationCheckDate) {
    this.lastSeatbeltInstallationCheckDate = lastSeatbeltInstallationCheckDate;
    return this;
  }

   /**
   * Get lastSeatbeltInstallationCheckDate
   * @return lastSeatbeltInstallationCheckDate
  **/
  public String getLastSeatbeltInstallationCheckDate() {
    return lastSeatbeltInstallationCheckDate;
  }

  public void setLastSeatbeltInstallationCheckDate(String lastSeatbeltInstallationCheckDate) {
    this.lastSeatbeltInstallationCheckDate = lastSeatbeltInstallationCheckDate;
  }

  public TestResult seatbeltInstallationCheckDate(String seatbeltInstallationCheckDate) {
    this.seatbeltInstallationCheckDate = seatbeltInstallationCheckDate;
    return this;
  }

   /**
   * Get seatbeltInstallationCheckDate
   * @return seatbeltInstallationCheckDate
  **/
  public String getSeatbeltInstallationCheckDate() {
    return seatbeltInstallationCheckDate;
  }

  public void setSeatbeltInstallationCheckDate(String seatbeltInstallationCheckDate) {
    this.seatbeltInstallationCheckDate = seatbeltInstallationCheckDate;
  }

  public TestResult testResult(String testResult) {
    this.testResult = testResult;
    return this;
  }

   /**
   * Get testResult
   * @return testResult
  **/
  public String getTestResult() {
    return testResult;
  }

  public void setTestResult(String testResult) {
    this.testResult = testResult;
  }

  public TestResult reasonForAbandoning(String reasonForAbandoning) {
    this.reasonForAbandoning = reasonForAbandoning;
    return this;
  }

   /**
   * Get reasonForAbandoning
   * @return reasonForAbandoning
  **/
  public String getReasonForAbandoning() {
    return reasonForAbandoning;
  }

  public void setReasonForAbandoning(String reasonForAbandoning) {
    this.reasonForAbandoning = reasonForAbandoning;
  }

  public TestResult additionalNotesRecorded(String additionalNotesRecorded) {
    this.additionalNotesRecorded = additionalNotesRecorded;
    return this;
  }

   /**
   * Get additionalNotesRecorded
   * @return additionalNotesRecorded
  **/
  public String getAdditionalNotesRecorded() {
    return additionalNotesRecorded;
  }

  public void setAdditionalNotesRecorded(String additionalNotesRecorded) {
    this.additionalNotesRecorded = additionalNotesRecorded;
  }

  public TestResult additionalCommentsForAbandon(String additionalCommentsForAbandon) {
    this.additionalCommentsForAbandon = additionalCommentsForAbandon;
    return this;
  }

   /**
   * Get additionalCommentsForAbandon
   * @return additionalCommentsForAbandon
  **/
  public String getAdditionalCommentsForAbandon() {
    return additionalCommentsForAbandon;
  }

  public void setAdditionalCommentsForAbandon(String additionalCommentsForAbandon) {
    this.additionalCommentsForAbandon = additionalCommentsForAbandon;
  }

  public TestResult particulateTrapFitted(String particulateTrapFitted) {
    this.particulateTrapFitted = particulateTrapFitted;
    return this;
  }

   /**
   * Get particulateTrapFitted
   * @return particulateTrapFitted
  **/
  public String getParticulateTrapFitted() {
    return particulateTrapFitted;
  }

  public void setParticulateTrapFitted(String particulateTrapFitted) {
    this.particulateTrapFitted = particulateTrapFitted;
  }

  public TestResult particulateTrapSerialNumber(String particulateTrapSerialNumber) {
    this.particulateTrapSerialNumber = particulateTrapSerialNumber;
    return this;
  }

   /**
   * Get particulateTrapSerialNumber
   * @return particulateTrapSerialNumber
  **/
  public String getParticulateTrapSerialNumber() {
    return particulateTrapSerialNumber;
  }

  public void setParticulateTrapSerialNumber(String particulateTrapSerialNumber) {
    this.particulateTrapSerialNumber = particulateTrapSerialNumber;
  }

  public TestResult modificationDateUsed(String modificationDateUsed) {
    this.modificationDateUsed = modificationDateUsed;
    return this;
  }

   /**
   * Get modificationDateUsed
   * @return modificationDateUsed
  **/
  public String getModificationDateUsed() {
    return modificationDateUsed;
  }

  public void setModificationDateUsed(String modificationDateUsed) {
    this.modificationDateUsed = modificationDateUsed;
  }

  public TestResult smokeTestKLimitApplied(String smokeTestKLimitApplied) {
    this.smokeTestKLimitApplied = smokeTestKLimitApplied;
    return this;
  }

   /**
   * Get smokeTestKLimitApplied
   * @return smokeTestKLimitApplied
  **/
  public String getSmokeTestKLimitApplied() {
    return smokeTestKLimitApplied;
  }

  public void setSmokeTestKLimitApplied(String smokeTestKLimitApplied) {
    this.smokeTestKLimitApplied = smokeTestKLimitApplied;
  }

  public TestResult createdById(String createdById) {
    this.createdById = createdById;
    return this;
  }

   /**
   * Get createdById
   * @return createdById
  **/
  public String getCreatedById() {
    return createdById;
  }

  public void setCreatedById(String createdById) {
    this.createdById = createdById;
  }

  public TestResult createdByName(String createdByName) {
    this.createdByName = createdByName;
    return this;
  }

   /**
   * Get createdByName
   * @return createdByName
  **/
  public String getCreatedByName() {
    return createdByName;
  }

  public void setCreatedByName(String createdByName) {
    this.createdByName = createdByName;
  }

  public TestResult lastUpdatedById(String lastUpdatedById) {
    this.lastUpdatedById = lastUpdatedById;
    return this;
  }

   /**
   * Get lastUpdatedById
   * @return lastUpdatedById
  **/
  public String getLastUpdatedById() {
    return lastUpdatedById;
  }

  public void setLastUpdatedById(String lastUpdatedById) {
    this.lastUpdatedById = lastUpdatedById;
  }

  public TestResult lastUpdatedByName(String lastUpdatedByName) {
    this.lastUpdatedByName = lastUpdatedByName;
    return this;
  }

   /**
   * Get lastUpdatedByName
   * @return lastUpdatedByName
  **/
  public String getLastUpdatedByName() {
    return lastUpdatedByName;
  }

  public void setLastUpdatedByName(String lastUpdatedByName) {
    this.lastUpdatedByName = lastUpdatedByName;
  }

  public TestResult defects(List<TestDefect> defects) {
    this.defects = defects;
    return this;
  }

  public TestResult addDefectsItem(TestDefect defectsItem) {
    if (this.defects == null) {
      this.defects = new ArrayList<TestDefect>();
    }
    this.defects.add(defectsItem);
    return this;
  }

   /**
   * Get defects
   * @return defects
  **/
  public List<TestDefect> getDefects() {
    return defects;
  }

  public void setDefects(List<TestDefect> defects) {
    this.defects = defects;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestResult testResult = (TestResult) o;
    return Objects.equals(this.fuelEmission, testResult.fuelEmission) &&
        Objects.equals(this.testStation, testResult.testStation) &&
        Objects.equals(this.tester, testResult.tester) &&
        Objects.equals(this.vehicleClass, testResult.vehicleClass) &&
        Objects.equals(this.testType, testResult.testType) &&
        Objects.equals(this.customDefect, testResult.customDefect) &&
        Objects.equals(this.testStatus, testResult.testStatus) &&
        Objects.equals(this.reasonForCancellation, testResult.reasonForCancellation) &&
        Objects.equals(this.numberOfSeats, testResult.numberOfSeats) &&
        Objects.equals(this.odometerReading, testResult.odometerReading) &&
        Objects.equals(this.odometerReadingUnits, testResult.odometerReadingUnits) &&
        Objects.equals(this.countryOfRegistration, testResult.countryOfRegistration) &&
        Objects.equals(this.noOfAxles, testResult.noOfAxles) &&
        Objects.equals(this.regndate, testResult.regndate) &&
        Objects.equals(this.firstUsedate, testResult.firstUsedate) &&
        Objects.equals(this.createdAt, testResult.createdAt) &&
        Objects.equals(this.lastUpdatedAt, testResult.lastUpdatedAt) &&
        Objects.equals(this.testCode, testResult.testCode) &&
        Objects.equals(this.testNumber, testResult.testNumber) &&
        Objects.equals(this.certificateNumber, testResult.certificateNumber) &&
        Objects.equals(this.secondaryCertificateNumber, testResult.secondaryCertificateNumber) &&
        Objects.equals(this.testExpiryDate, testResult.testExpiryDate) &&
        Objects.equals(this.testAnniversaryDate, testResult.testAnniversaryDate) &&
        Objects.equals(this.testDateStartTimestamp, testResult.testDateStartTimestamp) &&
        Objects.equals(this.testDateEndTimestamp, testResult.testDateEndTimestamp) &&
        Objects.equals(this.numberOfSeatbeltsFitted, testResult.numberOfSeatbeltsFitted) &&
        Objects.equals(this.lastSeatbeltInstallationCheckDate, testResult.lastSeatbeltInstallationCheckDate) &&
        Objects.equals(this.seatbeltInstallationCheckDate, testResult.seatbeltInstallationCheckDate) &&
        Objects.equals(this.testResult, testResult.testResult) &&
        Objects.equals(this.reasonForAbandoning, testResult.reasonForAbandoning) &&
        Objects.equals(this.additionalNotesRecorded, testResult.additionalNotesRecorded) &&
        Objects.equals(this.additionalCommentsForAbandon, testResult.additionalCommentsForAbandon) &&
        Objects.equals(this.particulateTrapFitted, testResult.particulateTrapFitted) &&
        Objects.equals(this.particulateTrapSerialNumber, testResult.particulateTrapSerialNumber) &&
        Objects.equals(this.modificationDateUsed, testResult.modificationDateUsed) &&
        Objects.equals(this.smokeTestKLimitApplied, testResult.smokeTestKLimitApplied) &&
        Objects.equals(this.createdById, testResult.createdById) &&
        Objects.equals(this.createdByName, testResult.createdByName) &&
        Objects.equals(this.lastUpdatedById, testResult.lastUpdatedById) &&
        Objects.equals(this.lastUpdatedByName, testResult.lastUpdatedByName) &&
        Objects.equals(this.defects, testResult.defects);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fuelEmission, testStation, tester, vehicleClass, testType, customDefect, testStatus, reasonForCancellation, numberOfSeats, odometerReading, odometerReadingUnits, countryOfRegistration, noOfAxles, regndate, firstUsedate, createdAt, lastUpdatedAt, testCode, testNumber, certificateNumber, secondaryCertificateNumber, testExpiryDate, testAnniversaryDate, testDateStartTimestamp, testDateEndTimestamp, numberOfSeatbeltsFitted, lastSeatbeltInstallationCheckDate, seatbeltInstallationCheckDate, testResult, reasonForAbandoning, additionalNotesRecorded, additionalCommentsForAbandon, particulateTrapFitted, particulateTrapSerialNumber, modificationDateUsed, smokeTestKLimitApplied, createdById, createdByName, lastUpdatedById, lastUpdatedByName, defects);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestResult {\n");
    
    sb.append("    fuelEmission: ").append(toIndentedString(fuelEmission)).append("\n");
    sb.append("    testStation: ").append(toIndentedString(testStation)).append("\n");
    sb.append("    tester: ").append(toIndentedString(tester)).append("\n");
    sb.append("    vehicleClass: ").append(toIndentedString(vehicleClass)).append("\n");
    sb.append("    testType: ").append(toIndentedString(testType)).append("\n");
    sb.append("    customDefect: ").append(toIndentedString(customDefect)).append("\n");
    sb.append("    testStatus: ").append(toIndentedString(testStatus)).append("\n");
    sb.append("    reasonForCancellation: ").append(toIndentedString(reasonForCancellation)).append("\n");
    sb.append("    numberOfSeats: ").append(toIndentedString(numberOfSeats)).append("\n");
    sb.append("    odometerReading: ").append(toIndentedString(odometerReading)).append("\n");
    sb.append("    odometerReadingUnits: ").append(toIndentedString(odometerReadingUnits)).append("\n");
    sb.append("    countryOfRegistration: ").append(toIndentedString(countryOfRegistration)).append("\n");
    sb.append("    noOfAxles: ").append(toIndentedString(noOfAxles)).append("\n");
    sb.append("    regndate: ").append(toIndentedString(regndate)).append("\n");
    sb.append("    firstUsedate: ").append(toIndentedString(firstUsedate)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    lastUpdatedAt: ").append(toIndentedString(lastUpdatedAt)).append("\n");
    sb.append("    testCode: ").append(toIndentedString(testCode)).append("\n");
    sb.append("    testNumber: ").append(toIndentedString(testNumber)).append("\n");
    sb.append("    certificateNumber: ").append(toIndentedString(certificateNumber)).append("\n");
    sb.append("    secondaryCertificateNumber: ").append(toIndentedString(secondaryCertificateNumber)).append("\n");
    sb.append("    testExpiryDate: ").append(toIndentedString(testExpiryDate)).append("\n");
    sb.append("    testAnniversaryDate: ").append(toIndentedString(testAnniversaryDate)).append("\n");
    sb.append("    testDateStartTimestamp: ").append(toIndentedString(testDateStartTimestamp)).append("\n");
    sb.append("    testDateEndTimestamp: ").append(toIndentedString(testDateEndTimestamp)).append("\n");
    sb.append("    numberOfSeatbeltsFitted: ").append(toIndentedString(numberOfSeatbeltsFitted)).append("\n");
    sb.append("    lastSeatbeltInstallationCheckDate: ").append(toIndentedString(lastSeatbeltInstallationCheckDate)).append("\n");
    sb.append("    seatbeltInstallationCheckDate: ").append(toIndentedString(seatbeltInstallationCheckDate)).append("\n");
    sb.append("    testResult: ").append(toIndentedString(testResult)).append("\n");
    sb.append("    reasonForAbandoning: ").append(toIndentedString(reasonForAbandoning)).append("\n");
    sb.append("    additionalNotesRecorded: ").append(toIndentedString(additionalNotesRecorded)).append("\n");
    sb.append("    additionalCommentsForAbandon: ").append(toIndentedString(additionalCommentsForAbandon)).append("\n");
    sb.append("    particulateTrapFitted: ").append(toIndentedString(particulateTrapFitted)).append("\n");
    sb.append("    particulateTrapSerialNumber: ").append(toIndentedString(particulateTrapSerialNumber)).append("\n");
    sb.append("    modificationDateUsed: ").append(toIndentedString(modificationDateUsed)).append("\n");
    sb.append("    smokeTestKLimitApplied: ").append(toIndentedString(smokeTestKLimitApplied)).append("\n");
    sb.append("    createdById: ").append(toIndentedString(createdById)).append("\n");
    sb.append("    createdByName: ").append(toIndentedString(createdByName)).append("\n");
    sb.append("    lastUpdatedById: ").append(toIndentedString(lastUpdatedById)).append("\n");
    sb.append("    lastUpdatedByName: ").append(toIndentedString(lastUpdatedByName)).append("\n");
    sb.append("    defects: ").append(toIndentedString(defects)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

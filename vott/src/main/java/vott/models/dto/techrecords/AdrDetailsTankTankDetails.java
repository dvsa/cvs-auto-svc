/*
 * Vehicles Microservice
 * This is the API spec for the vehicle microservice. Endpoints and parameters only exist for the operations getVehicle and getTechRecords. Other operations within the microservice are out of scope.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: bpecete@deloittece.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package vott.models.dto.techrecords;

import com.google.gson.annotations.SerializedName;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * AdrDetailsTankTankDetails
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-04-13T13:30:43.231Z[GMT]")
public class AdrDetailsTankTankDetails {
  @SerializedName("tankManufacturer")
  private String tankManufacturer = null;

  @SerializedName("yearOfManufacture")
  private BigDecimal yearOfManufacture = null;

  @SerializedName("tankCode")
  private String tankCode = null;

  @SerializedName("specialProvisions")
  private String specialProvisions = null;

  @SerializedName("tankManufacturerSerialNo")
  private String tankManufacturerSerialNo = null;

  @SerializedName("tankTypeAppNo")
  private String tankTypeAppNo = null;

  @SerializedName("tc2Details")
  private AdrDetailsTankTankDetailsTc2Details tc2Details = null;

  @SerializedName("tc3Details")
  private List<AdrDetailsTankTankDetailsTc3Details> tc3Details = null;

  public AdrDetailsTankTankDetails tankManufacturer(String tankManufacturer) {
    this.tankManufacturer = tankManufacturer;
    return this;
  }

   /**
   * Mandatory. Applicable only if vehicleDetails.type contains the word ‘tank’ or ‘battery’.
   * @return tankManufacturer
  **/
    public String getTankManufacturer() {
    return tankManufacturer;
  }

  public void setTankManufacturer(String tankManufacturer) {
    this.tankManufacturer = tankManufacturer;
  }

  public AdrDetailsTankTankDetails yearOfManufacture(BigDecimal yearOfManufacture) {
    this.yearOfManufacture = yearOfManufacture;
    return this;
  }

   /**
   * Mandatory. Applicable only if vehicleDetails.type contains the word ‘tank’ or ‘battery’.
   * minimum: 1800
   * maximum: 2100
   * @return yearOfManufacture
  **/
    public BigDecimal getYearOfManufacture() {
    return yearOfManufacture;
  }

  public void setYearOfManufacture(BigDecimal yearOfManufacture) {
    this.yearOfManufacture = yearOfManufacture;
  }

  public AdrDetailsTankTankDetails tankCode(String tankCode) {
    this.tankCode = tankCode;
    return this;
  }

   /**
   * Mandatory. Applicable only if vehicleDetails.type contains the word ‘tank’ or ‘battery’.
   * @return tankCode
  **/
    public String getTankCode() {
    return tankCode;
  }

  public void setTankCode(String tankCode) {
    this.tankCode = tankCode;
  }

  public AdrDetailsTankTankDetails specialProvisions(String specialProvisions) {
    this.specialProvisions = specialProvisions;
    return this;
  }

   /**
   * Optional. Applicable only if vehicleDetails.type contains the word ‘tank’ or ‘battery’.
   * @return specialProvisions
  **/
    public String getSpecialProvisions() {
    return specialProvisions;
  }

  public void setSpecialProvisions(String specialProvisions) {
    this.specialProvisions = specialProvisions;
  }

  public AdrDetailsTankTankDetails tankManufacturerSerialNo(String tankManufacturerSerialNo) {
    this.tankManufacturerSerialNo = tankManufacturerSerialNo;
    return this;
  }

   /**
   * Mandatory. Applicable only if vehicleDetails.type contains the word ‘tank’ or ‘battery’.
   * @return tankManufacturerSerialNo
  **/
    public String getTankManufacturerSerialNo() {
    return tankManufacturerSerialNo;
  }

  public void setTankManufacturerSerialNo(String tankManufacturerSerialNo) {
    this.tankManufacturerSerialNo = tankManufacturerSerialNo;
  }

  public AdrDetailsTankTankDetails tankTypeAppNo(String tankTypeAppNo) {
    this.tankTypeAppNo = tankTypeAppNo;
    return this;
  }

   /**
   * Optional. Applicable only if vehicleDetails.type contains the word ‘tank’ or ‘battery’.
   * @return tankTypeAppNo
  **/
    public String getTankTypeAppNo() {
    return tankTypeAppNo;
  }

  public void setTankTypeAppNo(String tankTypeAppNo) {
    this.tankTypeAppNo = tankTypeAppNo;
  }

  public AdrDetailsTankTankDetails tc2Details(AdrDetailsTankTankDetailsTc2Details tc2Details) {
    this.tc2Details = tc2Details;
    return this;
  }

   /**
   * Get tc2Details
   * @return tc2Details
  **/
    public AdrDetailsTankTankDetailsTc2Details getTc2Details() {
    return tc2Details;
  }

  public void setTc2Details(AdrDetailsTankTankDetailsTc2Details tc2Details) {
    this.tc2Details = tc2Details;
  }

  public AdrDetailsTankTankDetails tc3Details(List<AdrDetailsTankTankDetailsTc3Details> tc3Details) {
    this.tc3Details = tc3Details;
    return this;
  }

  public AdrDetailsTankTankDetails addTc3DetailsItem(AdrDetailsTankTankDetailsTc3Details tc3DetailsItem) {
    if (this.tc3Details == null) {
      this.tc3Details = new ArrayList<AdrDetailsTankTankDetailsTc3Details>();
    }
    this.tc3Details.add(tc3DetailsItem);
    return this;
  }

   /**
   * Get tc3Details
   * @return tc3Details
  **/
    public List<AdrDetailsTankTankDetailsTc3Details> getTc3Details() {
    return tc3Details;
  }

  public void setTc3Details(List<AdrDetailsTankTankDetailsTc3Details> tc3Details) {
    this.tc3Details = tc3Details;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdrDetailsTankTankDetails adrDetailsTankTankDetails = (AdrDetailsTankTankDetails) o;
    return Objects.equals(this.tankManufacturer, adrDetailsTankTankDetails.tankManufacturer) &&
        Objects.equals(this.yearOfManufacture, adrDetailsTankTankDetails.yearOfManufacture) &&
        Objects.equals(this.tankCode, adrDetailsTankTankDetails.tankCode) &&
        Objects.equals(this.specialProvisions, adrDetailsTankTankDetails.specialProvisions) &&
        Objects.equals(this.tankManufacturerSerialNo, adrDetailsTankTankDetails.tankManufacturerSerialNo) &&
        Objects.equals(this.tankTypeAppNo, adrDetailsTankTankDetails.tankTypeAppNo) &&
        Objects.equals(this.tc2Details, adrDetailsTankTankDetails.tc2Details) &&
        Objects.equals(this.tc3Details, adrDetailsTankTankDetails.tc3Details);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tankManufacturer, yearOfManufacture, tankCode, specialProvisions, tankManufacturerSerialNo, tankTypeAppNo, tc2Details, tc3Details);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdrDetailsTankTankDetails {\n");
    
    sb.append("    tankManufacturer: ").append(toIndentedString(tankManufacturer)).append("\n");
    sb.append("    yearOfManufacture: ").append(toIndentedString(yearOfManufacture)).append("\n");
    sb.append("    tankCode: ").append(toIndentedString(tankCode)).append("\n");
    sb.append("    specialProvisions: ").append(toIndentedString(specialProvisions)).append("\n");
    sb.append("    tankManufacturerSerialNo: ").append(toIndentedString(tankManufacturerSerialNo)).append("\n");
    sb.append("    tankTypeAppNo: ").append(toIndentedString(tankTypeAppNo)).append("\n");
    sb.append("    tc2Details: ").append(toIndentedString(tc2Details)).append("\n");
    sb.append("    tc3Details: ").append(toIndentedString(tc3Details)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

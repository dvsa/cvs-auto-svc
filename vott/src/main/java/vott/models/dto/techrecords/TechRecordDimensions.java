/*
 * Vehicles Microservice
 * This is the API spec for the vehicle microservice. Endpoints and parameters only exist for the operations getVehicle and getTechRecords. Other operations within the microservice are out of scope.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: bpecete@deloittece.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package vott.models.dto.techrecords;

import com.google.gson.annotations.SerializedName;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * TechRecordDimensions
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-04-13T13:30:43.231Z[GMT]")
public class TechRecordDimensions {
  @SerializedName("length")
  private BigDecimal length = null;

  @SerializedName("height")
  private BigDecimal height = null;

  @SerializedName("width")
  private BigDecimal width = null;

  @SerializedName("axleSpacing")
  private List<TechRecordDimensionsAxleSpacing> axleSpacing = null;

  public TechRecordDimensions length(BigDecimal length) {
    this.length = length;
    return this;
  }

   /**
   * Used for all vehicle types. Optional for PSV
   * maximum: 99999
   * @return length
  **/
    public BigDecimal getLength() {
    return length;
  }

  public void setLength(BigDecimal length) {
    this.length = length;
  }

  public TechRecordDimensions height(BigDecimal height) {
    this.height = height;
    return this;
  }

   /**
   * Used only for PSV
   * maximum: 99999
   * @return height
  **/
    public BigDecimal getHeight() {
    return height;
  }

  public void setHeight(BigDecimal height) {
    this.height = height;
  }

  public TechRecordDimensions width(BigDecimal width) {
    this.width = width;
    return this;
  }

   /**
   * Used for all vehicle types. Optional for PSV
   * maximum: 99999
   * @return width
  **/
    public BigDecimal getWidth() {
    return width;
  }

  public void setWidth(BigDecimal width) {
    this.width = width;
  }

  public TechRecordDimensions axleSpacing(List<TechRecordDimensionsAxleSpacing> axleSpacing) {
    this.axleSpacing = axleSpacing;
    return this;
  }

  public TechRecordDimensions addAxleSpacingItem(TechRecordDimensionsAxleSpacing axleSpacingItem) {
    if (this.axleSpacing == null) {
      this.axleSpacing = new ArrayList<TechRecordDimensionsAxleSpacing>();
    }
    this.axleSpacing.add(axleSpacingItem);
    return this;
  }

   /**
   * Used only for HGV and TRL
   * @return axleSpacing
  **/
    public List<TechRecordDimensionsAxleSpacing> getAxleSpacing() {
    return axleSpacing;
  }

  public void setAxleSpacing(List<TechRecordDimensionsAxleSpacing> axleSpacing) {
    this.axleSpacing = axleSpacing;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TechRecordDimensions techRecordDimensions = (TechRecordDimensions) o;
    return Objects.equals(this.length, techRecordDimensions.length) &&
        Objects.equals(this.height, techRecordDimensions.height) &&
        Objects.equals(this.width, techRecordDimensions.width) &&
        Objects.equals(this.axleSpacing, techRecordDimensions.axleSpacing);
  }

  @Override
  public int hashCode() {
    return Objects.hash(length, height, width, axleSpacing);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TechRecordDimensions {\n");
    
    sb.append("    length: ").append(toIndentedString(length)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    axleSpacing: ").append(toIndentedString(axleSpacing)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

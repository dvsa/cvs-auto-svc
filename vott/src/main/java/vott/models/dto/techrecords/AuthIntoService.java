/*
 * Vehicles Microservice
 * This is the API spec for the vehicle microservice. Endpoints and parameters only exist for the operations getVehicle and getTechRecords. Other operations within the microservice are out of scope.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: bpecete@deloittece.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package vott.models.dto.techrecords;

import com.google.gson.annotations.SerializedName;
import java.time.LocalDate;

import java.util.Objects;

/**
 * Authorization into service
 */
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-04-13T13:30:43.231Z[GMT]")
public class AuthIntoService {
  @SerializedName("cocIssueDate")
  private LocalDate cocIssueDate = null;

  @SerializedName("dateReceived")
  private LocalDate dateReceived = null;

  @SerializedName("datePending")
  private LocalDate datePending = null;

  @SerializedName("dateAuthorised")
  private LocalDate dateAuthorised = null;

  @SerializedName("dateRejected")
  private LocalDate dateRejected = null;

  public AuthIntoService cocIssueDate(LocalDate cocIssueDate) {
    this.cocIssueDate = cocIssueDate;
    return this;
  }

   /**
   * Used only for TRL
   * @return cocIssueDate
  **/
    public LocalDate getCocIssueDate() {
    return cocIssueDate;
  }

  public void setCocIssueDate(LocalDate cocIssueDate) {
    this.cocIssueDate = cocIssueDate;
  }

  public AuthIntoService dateReceived(LocalDate dateReceived) {
    this.dateReceived = dateReceived;
    return this;
  }

   /**
   * Used only for TRL
   * @return dateReceived
  **/
    public LocalDate getDateReceived() {
    return dateReceived;
  }

  public void setDateReceived(LocalDate dateReceived) {
    this.dateReceived = dateReceived;
  }

  public AuthIntoService datePending(LocalDate datePending) {
    this.datePending = datePending;
    return this;
  }

   /**
   * Used only for TRL
   * @return datePending
  **/
    public LocalDate getDatePending() {
    return datePending;
  }

  public void setDatePending(LocalDate datePending) {
    this.datePending = datePending;
  }

  public AuthIntoService dateAuthorised(LocalDate dateAuthorised) {
    this.dateAuthorised = dateAuthorised;
    return this;
  }

   /**
   * Used only for TRL
   * @return dateAuthorised
  **/
    public LocalDate getDateAuthorised() {
    return dateAuthorised;
  }

  public void setDateAuthorised(LocalDate dateAuthorised) {
    this.dateAuthorised = dateAuthorised;
  }

  public AuthIntoService dateRejected(LocalDate dateRejected) {
    this.dateRejected = dateRejected;
    return this;
  }

   /**
   * Used only for TRL
   * @return dateRejected
  **/
    public LocalDate getDateRejected() {
    return dateRejected;
  }

  public void setDateRejected(LocalDate dateRejected) {
    this.dateRejected = dateRejected;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthIntoService authIntoService = (AuthIntoService) o;
    return Objects.equals(this.cocIssueDate, authIntoService.cocIssueDate) &&
        Objects.equals(this.dateReceived, authIntoService.dateReceived) &&
        Objects.equals(this.datePending, authIntoService.datePending) &&
        Objects.equals(this.dateAuthorised, authIntoService.dateAuthorised) &&
        Objects.equals(this.dateRejected, authIntoService.dateRejected);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cocIssueDate, dateReceived, datePending, dateAuthorised, dateRejected);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthIntoService {\n");
    
    sb.append("    cocIssueDate: ").append(toIndentedString(cocIssueDate)).append("\n");
    sb.append("    dateReceived: ").append(toIndentedString(dateReceived)).append("\n");
    sb.append("    datePending: ").append(toIndentedString(datePending)).append("\n");
    sb.append("    dateAuthorised: ").append(toIndentedString(dateAuthorised)).append("\n");
    sb.append("    dateRejected: ").append(toIndentedString(dateRejected)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

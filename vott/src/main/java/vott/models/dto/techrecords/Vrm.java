/*
 * Vehicles Microservice
 * This is the API spec for the vehicle microservice. Endpoints and parameters only exist for the operations getVehicle and getTechRecords. Other operations within the microservice are out of scope.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: bpecete@deloittece.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package vott.models.dto.techrecords;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

/**
 * Used only for PSV and HGV
 */
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-04-13T13:30:43.231Z[GMT]")
public class Vrm {
  @SerializedName("vrm")
  private String vrm = null;

  @SerializedName("isPrimary")
  private Boolean isPrimary = null;

  public Vrm vrm(String vrm) {
    this.vrm = vrm;
    return this;
  }

   /**
   * Get vrm
   * @return vrm
  **/
    public String getVrm() {
    return vrm;
  }

  public void setVrm(String vrm) {
    this.vrm = vrm;
  }

  public Vrm isPrimary(Boolean isPrimary) {
    this.isPrimary = isPrimary;
    return this;
  }

   /**
   * Get isPrimary
   * @return isPrimary
  **/
    public Boolean isIsPrimary() {
    return isPrimary;
  }

  public void setIsPrimary(Boolean isPrimary) {
    this.isPrimary = isPrimary;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Vrm vrm = (Vrm) o;
    return Objects.equals(this.vrm, vrm.vrm) &&
        Objects.equals(this.isPrimary, vrm.isPrimary);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vrm, isPrimary);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Vrm {\n");
    
    sb.append("    vrm: ").append(toIndentedString(vrm)).append("\n");
    sb.append("    isPrimary: ").append(toIndentedString(isPrimary)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
